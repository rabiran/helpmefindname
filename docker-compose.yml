version: '3'

services:
    g:
        container_name: gservice
        # image: suharik/gimage:try
        build: .
        #env_file: docker-compose.env
        restart: unless-stopped
        ports:
            - "8000:8000"
        environment: 
            - DB_URL= ${DOCKER_DB_URL}
            - REDIS_URL= ${DOCKER_REDIS_URL}
            #- REDIS_URL= redis://localhost
        depends_on:
            - mongodb-primary
            - redis
    
    mongodb-primary:
        container_name: gmongo-primary
        image: bitnami/mongodb:latest
        #env_file: docker-compose.env
        restart: unless-stopped
        environment:
            # - MONGO_INITDB_ROOT_USERNAME=admin
            # - MONGO_INITDB_ROOT_PASSWORD=password
            # - MONGO_INITDB_DATABASE = g
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY}
            - MONGODB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
            - MONGODB_USERNAME=${MONGODB_USERNAME}
            - MONGODB_PASSWORD=${MONGODB_PASSWORD}
            - MONGODB_DATABASE=${MONGODB_DATABASE}
        # ports:
        #     - "27017:27017"
        volumes:
            - ./data:/data/db

    mongodb-secondary:
        container_name: gmongo-secondary
        image: bitnami/mongodb:latest
        #env_file: docker-compose.env
        restart: unless-stopped
        depends_on:
            - mongodb-primary
        environment:
            # - MONGO_INITDB_ROOT_USERNAME=admin
            # - MONGO_INITDB_ROOT_PASSWORD=password
            # - MONGO_INITDB_DATABASE = g
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY}
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
        # ports:
        #     - "27017:27017"
        # volumes:
        #     - ./data:/data/db
    
    mongodb-arbiter:
        container_name: gmongo-arbiter
        image: bitnami/mongodb:latest
        #env_file: docker-compose.env
        restart: unless-stopped
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_REPLICA_SET_KEY}
            - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_SET_KEY}

    redis:
        container_name: gredis
        image: bitnami/redis:latest
        restart: unless-stopped
        environment: 
            # - ALLOW_EMPTY_PASSWORD=yes
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        ports:
            - "6379:6379"
        volumes:
            - ./data:/data/redis