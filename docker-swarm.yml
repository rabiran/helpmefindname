version: '3.3'

services:
    api:
        image: suharik/gimage:latest
        # build: .
        restart: unless-stopped
        env_file: swarm.env
        ports:
            - "80:8000"
        configs:
            - source: dataSources
              target: /usr/src/app/app/config/dataSourcesMap.xlsx
            - source: domainsMap
              target: /usr/src/app/app/config/domainsMap.js
            - source: key
              target: /usr/src/app/app/config/key.pem
        # environment: 
        #     - DB_URL= mongodb://guser:password2@mongo:27017/g
        #     - REDIS_URL= redis://:password3@redis:6379
        depends_on:
            - mongodb-primary
            - redis
            - orch-connector
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.labels.backend == 1

    orch-connector:
        image: suharik/gimage:orch
        env_file: orchConnector.env
        restart: unless-stopped
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.labels.backend == 1

    ui:
        image: suharik/garden:latest
        # build: .
        restart: unless-stopped
        env_file: swarmGarden.env
        ports:
            - "3000:3005"
        configs:
            - source: key
              target: /usr/src/app/app/config/key.pem
            - source: shraga
              target: /usr/src/app/app/config/shraga.js
        # environment: 
        #     - DB_URL= mongodb://guser:password2@mongo:27017/g
        #     - REDIS_URL= redis://:password3@redis:6379
        depends_on:
            - api
            - mongodb-primary
            - redis
        deploy:
            replicas: 2
            placement:
                constraints:
                    - node.labels.backend == 1

    # mongo:
    #     image: bitnami/mongodb:latest
    #     restart: unless-stopped
    #     env_file: swarm.env
    #     # user: root
    #     ports:
    #         - "27017:27017"
    #     # volumes:
    #     #     - /volume:/bitnami/mongodb/data
    #     deploy:
    #         replicas: 1
    #         placement:
    #             constraints:
    #                 - node.labels.manager == 1
    
    mongodb-primary:
        image: docker.io/bitnami/mongodb:4.4
        #user: root
        env_file: swarm.env
        restart: unless-stopped
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=
        # ports:
        #     - "27017:27017"
        volumes:
            - /volume/mongo:/bitnami/mongodb/data
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.manager == 1

    mongodb-secondary:
        image: docker.io/bitnami/mongodb:4.4
        env_file: swarm.env
        restart: unless-stopped
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_ROOT_PASSWORD=
        # ports:
        #     - "27017:27017"
        volumes:
            - /volume/mongo:/bitnami/mongodb/data
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.worker == 1
    
    mongodb-arbiter:
        image: docker.io/bitnami/mongodb:4.4
        env_file: swarm.env
        restart: unless-stopped
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_ROOT_PASSWORD=
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.worker == 2

    redis:
        image: bitnami/redis:latest
        restart: unless-stopped
        env_file: swarm.env
        # user: root
        # environment: 
        #     # - ALLOW_EMPTY_PASSWORD=yes
        #     - REDIS_PASSWORD=password3
        ports:
            - "6379:6379"
        volumes:
            - /volume/redis:/bitnami/redis/data
        deploy:
            replicas: 1
            placement:
                constraints:
                    - node.labels.manager == 1

configs:
    dataSources:
        external: true
    domainsMap:
        external: true
    key:
        external: true
    shraga:
        external: true
